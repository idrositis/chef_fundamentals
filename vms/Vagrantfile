# -*- mode: ruby -*-
# vi: set ft=ruby :

# Use version 2 of API
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # CentOS 6.6 needed for full docker support
  # https://atlas.hashicorp.com/chef/boxes/centos-6.6
  config.vm.box = "chef/centos-6.6"

  # Hostname
  config.vm.hostname = "client.example.com"

  # Enable check for updates
  config.vm.box_check_update = true

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Use bridged/public network (DHCP)
  # Alternatives (to possibly avoid vagrant poping-up to select interface for
  # the bridge):
  config.vm.network "public_network", bridge: 'wlan0'
  #config.vm.network "public_network", bridge: 'en1: Wi-Fi (AirPort)'
  #config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Setup VirtualBox provider
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true

    # Customize the amount of memory and the CPUs on the VM:
    vb.cpus = "1"
    vb.memory = "1024"
  end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

  # Complete provisioning with CHEF
  config.vm.provision :shell, path: "bootstrap_client.sh" 
end
