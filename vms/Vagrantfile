# -*- mode: ruby -*-
# vi: set ft=ruby :

# TODOs:
# - use Ubuntu for the kitchen/workstation VM
# - import custom folder per VM (for own recipies/customization files, etc.)
# - import chef gpg-keys (https://tickets.opscode.com/browse/CHEF-2803)

# vms/
#  ├── kitchen: workstation VM with ChefDK
#  ├── server : chef-server VM
#  └── node1  : node/client VM
Vagrant.configure(2) do |config|

  # VM kitchen config
  config.vm.define "kitchen" do |kitchen|
    # Stick with CentOS 6.x for now
    kitchen.vm.box = "chef/centos-6.6"

    kitchen.vm.hostname = "kitchen.example.com"
    #kitchen.vm.box_check_update = true

    # Use bridged/public network (DHCP)
    # (possibly avoid vagrant poping-up to select interface for the bridge)
    kitchen.vm.network "public_network", bridge: 'wlan0'
    #kitchen.vm.network "public_network", bridge: 'en1: Wi-Fi (AirPort)'
    #kitchen.vm.network "public_network"

    # Just VirtualBox provider for now
    kitchen.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.cpus = "1"
      vb.memory = "1024"
    end

    # Complete provisioning with CHEF
    kitchen.vm.provision :shell, path: "bootstrap_kitchen.sh" 
  end

  # VM node1 config
  config.vm.define "node1" do |node1|
    # Stick with CentOS 6.x for now
    node1.vm.box = "chef/centos-6.6"

    node1.vm.hostname = "node1.example.com"
    #node1.vm.box_check_update = true

    # Use bridged/public network (DHCP)
    # (possibly avoid vagrant poping-up to select interface for the bridge)
    node1.vm.network "public_network", bridge: 'wlan0'
    #node1.vm.network "public_network", bridge: 'en1: Wi-Fi (AirPort)'
    #node1.vm.network "public_network"

    # Just VirtualBox provider for now
    node1.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.cpus = "1"
      vb.memory = "512"
    end

    # Complete provisioning with CHEF
    node1.vm.provision :shell, path: "bootstrap_client.sh" 
  end
end
